#
# This is the main Apache HTTP server configuration file.  It contains the
# configuration directives that give the server its instructions.
# See <URL:http://httpd.apache.org/docs/2.2> for detailed information.
# In particular, see 
# <URL:http://httpd.apache.org/docs/2.2/mod/directives.html>
# for a discussion of each configuration directive.
#
# Do NOT simply read the instructions in here without understanding
# what they do.  They're here only as hints or reminders.  If you are unsure
# consult the online docs. You have been warned.  
#
# Configuration and logfile names: If the filenames you specify for many
# of the server's control files begin with "/" (or "drive:/" for Win32), the
# server will use that explicit path.  If the filenames do *not* begin
# with "/", the value of ServerRoot is prepended -- so "logs/foo.log"
# with ServerRoot set to "/usr/local/apache2" will be interpreted by the
# server as "/usr/local/apache2/logs/foo.log".

#
# ServerRoot: The top of the directory tree under which the server's
# configuration, error, and log files are kept.
#
# Do not add a slash at the end of the directory path.  If you point
# ServerRoot at a non-local disk, be sure to point the LockFile directive
# at a local disk.  If you wish to share the same ServerRoot for multiple
# httpd daemons, you will need to change at least LockFile and PidFile.
#
ServerRoot "/usr/local/apache2"


#
# Listen: Allows you to bind Apache to specific IP addresses and/or
# ports, instead of the default. See also the <VirtualHost>
# directive.
#
# Change this to Listen on specific IP addresses as shown below to 
# prevent Apache from glomming onto all bound IP addresses.
#
#Listen 192.168.1.160:80
#Listen 122.200.64.160:8000
Listen 80
#Listen 8888

#
# Dynamic Shared Object (DSO) Support
#
# To be able to use the functionality of a module which was built as a DSO you
# have to place corresponding `LoadModule' lines at this location so the
# directives contained in it are actually available _before_ they are used.
# Statically compiled modules (those listed by `httpd -l') do not need
# to be loaded here.
#
# Example:
# LoadModule foo_module modules/mod_foo.so
LoadModule php5_module        modules/libphp5.so
#

<IfModule !mpm_netware_module>
#
# If you wish httpd to run as a different user or group, you must run
# httpd as root initially and it will switch.  
#
# User/Group: The name (or #number) of the user/group to run httpd as.
# It is usually good practice to create a dedicated user and group for
# running httpd, as with most system services.
#
User www
Group www
</IfModule>

# 'Main' server configuration
#
# The directives in this section set up the values used by the 'main'
# server, which responds to any requests that aren't handled by a
# <VirtualHost> definition.  These values also provide defaults for
# any <VirtualHost> containers you may define later in the file.
#
# All of these directives may appear inside <VirtualHost> containers,
# in which case these default settings will be overridden for the
# virtual host being defined.
#

#
# ServerAdmin: Your address, where problems with the server should be
# e-mailed.  This address appears on some server-generated pages, such
# as error documents.  e.g. admin@your-domain.com
#
ServerAdmin you@example.com

#
# ServerName gives the name and port that the server uses to identify itself.
# This can often be determined automatically, but we recommend you specify
# it explicitly to prevent problems during startup.
#
# If your host doesn't have a registered DNS name, enter its IP address here.
#
#ServerName www.example.com:80

#
# DocumentRoot: The directory out of which you will serve your
# documents. By default, all requests are taken from this directory, but
# symbolic links and aliases may be used to point to other locations.
#
DocumentRoot "/usr/local/apache2/htdocs"

#
# Each directory to which Apache has access can be configured with respect
# to which services and features are allowed and/or disabled in that
# directory (and its subdirectories). 
#
# First, we configure the "default" to be a very restrictive set of 
# features.  
#
<Directory />
    Options FollowSymLinks
    AllowOverride None
    Order deny,allow
    Deny from all
</Directory>

#
# Note that from this point forward you must specifically allow
# particular features to be enabled - so if something's not working as
# you might expect, make sure that you have specifically enabled it
# below.
#

#
# This should be changed to whatever you set DocumentRoot to.
#

<Directory "/kxc/pic">
    Options FollowSymLinks
    AllowOverride None
    Order allow,deny
    Allow from all
</Directory>

<Directory "/kxc/pic_wap">
    Options FollowSymLinks
    AllowOverride None
    Order allow,deny
    Allow from all
</Directory>

<Directory "/kxc/shop">
    Options FollowSymLinks
    AllowOverride None
    Order allow,deny
    Allow from all
</Directory>

<Directory "/kxc/core">
    Options FollowSymLinks
    AllowOverride None
    Order allow,deny
    Allow from all
</Directory>

<Directory "/kxc/admin">
    Options FollowSymLinks
    AllowOverride None
    Order allow,deny
    Allow from all
</Directory>

<Directory "/kxc/static">
    Options FollowSymLinks
    AllowOverride None
    Order allow,deny
    Allow from all
</Directory>

<Directory "/kxc/storage">
    Options FollowSymLinks
    AllowOverride None
    Order allow,deny
    Allow from all
</Directory>

<Directory "/kxc/pic_api">
    Options FollowSymLinks
    AllowOverride None
    Order allow,deny
    Allow from all
</Directory>

<Directory "/kxc/api">
    Options FollowSymLinks
    AllowOverride None
    Order allow,deny
    Allow from all
</Directory>
#
# DirectoryIndex: sets the file that Apache will serve if a directory
# is requested.
#
<IfModule dir_module>
    DirectoryIndex index.html index.php
</IfModule>

#
# The following lines prevent .htaccess and .htpasswd files from being 
# viewed by Web clients. 
#
<FilesMatch "^\.ht">
    Order allow,deny
    Deny from all
    Satisfy All
</FilesMatch>

#
# ErrorLog: The location of the error log file.
# If you do not specify an ErrorLog directive within a <VirtualHost>
# container, error messages relating to that virtual host will be
# logged here.  If you *do* define an error logfile for a <VirtualHost>
# container, that host's errors will be logged there and not here.
#
ErrorLog logs/error_log

#
# LogLevel: Control the number of messages logged to the error_log.
# Possible values include: debug, info, notice, warn, error, crit,
# alert, emerg.
#
LogLevel warn

<IfModule log_config_module>
    #
    # The following directives define some format nicknames for use with
    # a CustomLog directive (see below).
    #

    SetEnvIf Request_URI "\.bmp$" imglog
    SetEnvIf Request_URI "\.gif$" imglog
    SetEnvIf Request_URI "\.png$" imglog
    SetEnvIf Request_URI "\.jpg$" imglog
    SetEnvIf Request_URI "\.jpeg$" imglog
    SetEnvIf Request_URI "\.pjpeg$" imglog
    SetEnvIf Request_URI "\.x-png$" imglog
    SetEnvIf Request_URI "\.tiff$" imglog
    SetEnvIf Request_URI "\.js$" imglog
    SetEnvIf Request_URI "\.css$" imglog
    SetEnvIf Request_URI "\.swf$" imglog

    SetEnvIf Request_URI "\.ico$" dontlog
    SetEnvIf Request_URI "\.bmp$" dontlog
    SetEnvIf Request_URI "\.gif$" dontlog
    SetEnvIf Request_URI "\.png$" dontlog
    SetEnvIf Request_URI "\.jpg$" dontlog
    SetEnvIf Request_URI "\.jpeg$" dontlog
    SetEnvIf Request_URI "\.pjpeg$" dontlog
    SetEnvIf Request_URI "\.x-png$" dontlog
    SetEnvIf Request_URI "\.tiff$" dontlog
    SetEnvIf Request_URI "\.js$" dontlog
    SetEnvIf Request_URI "\.css$" dontlog
    SetEnvIf Request_URI "\.swf$" dontlog

    SetEnvIf Remote_Addr "::1" dontlog
    SetEnvIf Request_Method "HEAD" dontlog
    SetEnvIf Request_Method "OPTIONS" dontlog

    DeflateFilterNote Ratio ratio
    LogFormat "%{X-Forwarded-For}i %l %u %t \"%r\" %>s %b \"%{Referer}i\" \"%{User-Agent}i\" %T (%{ratio}n%%) %h" combined
    LogFormat "%h %l %u %t \"%r\" %>s %b" common
    LogFormat "%h \"%r\" %>s %D" tosyslog

    <IfModule logio_module>
      # You need to enable mod_logio.c to use %I and %O
      LogFormat "%h %l %u %t \"%r\" %>s %b \"%{Referer}i\" \"%{User-Agent}i\" %I %O" combinedio
    </IfModule>

    #
    # The location and format of the access logfile (Common Logfile Format).
    # If you do not define any access logfiles within a <VirtualHost>
    # container, they will be logged here.  Contrariwise, if you *do*
    # define per-<VirtualHost> access logfiles, transactions will be
    # logged therein and *not* in this file.
    #
    CustomLog logs/access_log common

    #
    # If you prefer a logfile with access, agent, and referer information
    # (Combined Logfile Format) you can use the following directive.
    #
    #CustomLog logs/access_log combined
</IfModule>

<IfModule alias_module>
    #
    # Redirect: Allows you to tell clients about documents that used to 
    # exist in your server's namespace, but do not anymore. The client 
    # will make a new request for the document at its new location.
    # Example:
    # Redirect permanent /foo http://www.example.com/bar

    #
    # Alias: Maps web paths into filesystem paths and is used to
    # access content that does not live under the DocumentRoot.
    # Example:
    # Alias /webpath /full/filesystem/path
    #
    # If you include a trailing / on /webpath then the server will
    # require it to be present in the URL.  You will also likely
    # need to provide a <Directory> section to allow access to
    # the filesystem path.

    #
    # ScriptAlias: This controls which directories contain server scripts. 
    # ScriptAliases are essentially the same as Aliases, except that
    # documents in the target directory are treated as applications and
    # run by the server when requested rather than as documents sent to the
    # client.  The same rules about trailing "/" apply to ScriptAlias
    # directives as to Alias.
    #
    ScriptAlias /cgi-bin/ "/usr/local/apache2/cgi-bin/"

</IfModule>

<IfModule cgid_module>
    #
    # ScriptSock: On threaded servers, designate the path to the UNIX
    # socket used to communicate with the CGI daemon of mod_cgid.
    #
    #Scriptsock logs/cgisock
</IfModule>

#
# "/usr/local/apache2/cgi-bin" should be changed to whatever your ScriptAliased
# CGI directory exists, if you have that configured.
#
<Directory "/usr/local/apache2/cgi-bin">
    AllowOverride None
    Options None
    Order allow,deny
    Allow from all
</Directory>

#
# DefaultType: the default MIME type the server will use for a document
# if it cannot otherwise determine one, such as from filename extensions.
# If your server contains mostly text or HTML documents, "text/plain" is
# a good value.  If most of your content is binary, such as applications
# or images, you may want to use "application/octet-stream" instead to
# keep browsers from trying to display binary files as though they are
# text.
#
DefaultType text/plain

<IfModule mime_module>
    #
    # TypesConfig points to the file containing the list of mappings from
    # filename extension to MIME-type.
    #
    TypesConfig conf/mime.types

    #
    # AddType allows you to add to or override the MIME configuration
    # file specified in TypesConfig for specific file types.
    #
    #AddType application/x-gzip .tgz
    #
    # AddEncoding allows you to have certain browsers uncompress
    # information on the fly. Note: Not all browsers support this.
    #
    #AddEncoding x-compress .Z
    #AddEncoding x-gzip .gz .tgz
    #
    # If the AddEncoding directives above are commented-out, then you
    # probably should define those extensions to indicate media types:
    #
    AddType application/x-compress .Z
    AddType application/x-gzip .gz .tgz
    AddType application/octet-stream .apk

    #
    # AddHandler allows you to map certain file extensions to "handlers":
    # actions unrelated to filetype. These can be either built into the server
    # or added with the Action directive (see below)
    #
    # To use CGI scripts outside of ScriptAliased directories:
    # (You will also need to add "ExecCGI" to the "Options" directive.)
    #
    #AddHandler cgi-script .cgi

    # For type maps (negotiated resources):
    #AddHandler type-map var

    #
    # Filters allow you to process content before it is sent to the client.
    #
    # To parse .shtml files for server-side includes (SSI):
    # (You will also need to add "Includes" to the "Options" directive.)
    #
    #AddType text/html .shtml
    #AddOutputFilter INCLUDES .shtml
    AddType application/x-httpd-php .php .phtml

    AddType application/x-xpinstall .xpi
    AddType video/x-flv .flv
</IfModule>

#
# The mod_mime_magic module allows the server to use various hints from the
# contents of the file itself to determine its type.  The MIMEMagicFile
# directive tells the module where the hint definitions are located.
#
#MIMEMagicFile conf/magic

#
# Customizable error responses come in three flavors:
# 1) plain text 2) local redirects 3) external redirects
#
# Some examples:
#ErrorDocument 500 "The server made a boo boo."
#ErrorDocument 404 /missing.html
#ErrorDocument 404 "/cgi-bin/missing_handler.pl"
#ErrorDocument 402 http://www.example.com/subscription_info.html
#

#
# EnableMMAP and EnableSendfile: On systems that support it, 
# memory-mapping or the sendfile syscall is used to deliver
# files.  This usually improves server performance, but must
# be turned off when serving from networked-mounted 
# filesystems or if support for these functions is otherwise
# broken on your system.
#
#EnableMMAP off
#EnableSendfile off

# Supplemental configuration
#
# The configuration files in the conf/extra/ directory can be 
# included to add extra features or to modify the default configuration of 
# the server, or you may simply copy their contents here and change as 
# necessary.

# Server-pool management (MPM specific)
Include conf/extra/httpd-mpm.conf

# Multi-language error messages
#Include conf/extra/httpd-multilang-errordoc.conf

# Fancy directory listings
#Include conf/extra/httpd-autoindex.conf

# Language settings
#Include conf/extra/httpd-languages.conf

# User home directories
#Include conf/extra/httpd-userdir.conf

# Real-time info on requests and configuration
#Include conf/extra/httpd-info.conf

# Virtual hosts
#Include conf/extra/httpd-vhosts.conf

# Local access to the Apache HTTP Server Manual
#Include conf/extra/httpd-manual.conf

# Distributed authoring and versioning (WebDAV)
#Include conf/extra/httpd-dav.conf

# Various default settings
Include conf/extra/httpd-default.conf

# Secure (SSL/TLS) connections
#Include conf/extra/httpd-ssl.conf
#
# Note: The following must must be present to support
#       starting without SSL on platforms with no /dev/random equivalent
#       but a statically compiled-in mod_ssl.
#
<IfModule ssl_module>
SSLRandomSeed startup builtin
SSLRandomSeed connect builtin
</IfModule>

<Location />
    SetOutputFilter DEFLATE
    BrowserMatch ^Mozilla/4 gzip-only-text/html
    BrowserMatch ^Mozilla/4\.0[678] no-gzip
    BrowserMatch \bMSIE !no-gzip !gzip-only-text/html
    SetEnvIfNoCase Request_URI \.(?:gif|p?jpe?g|png|mp3|wma|midi?|rm|swf|ico|bmp|flv)$ no-gzip dont-vary
    SetEnvIfNoCase Request_URI \/interface\/404\.php$ no-gzip dont-vary
    Header append Vary User-Agent env=!dont-vary
</Location>

NameVirtualHost *
<VirtualHost *>
    DocumentRoot /kxc/pic/htdocs
    ServerName tu.kxjie.com
    ServerAlias jipin.kaixin009.com
    ServerAlias jipin.kaixin001.com
    ErrorLog logs/pic_error_log
    CustomLog "| /usr/local/apache2/bin/rotatelogs /usr/local/apache2/logs/pic_access_log.%Y%m%d 86400 480" combined env=!dontlog

    RewriteEngine on
    RewriteCond /kxc/pic/htdocs/%{REQUEST_FILENAME} !-f
    RewriteCond /kxc/pic/htdocs/%{REQUEST_FILENAME} !-d
    RewriteCond /kxc/pic/htdocs/%{REQUEST_FILENAME}/index.php !-f
    RewriteRule ^(.*)$ /routing.php
</VirtualHost>

<VirtualHost *>
    DocumentRoot /kxc/pic_api/htdocs
    ServerName api.tu.kxjie.com
    ErrorLog logs/pic_error_log
    CustomLog "| /usr/local/apache2/bin/rotatelogs /usr/local/apache2/logs/pic_access_log.%Y%m%d 86400 480" combined env=!dontlog

    RewriteEngine on
    RewriteRule ^(.*)$ /index.php
</VirtualHost>

<VirtualHost *>
    DocumentRoot /kxc/pic_wap/htdocs
    ServerName wap.kxjie.com
    ServerAlias wap.jipin.kaixin009.com
    ServerAlias wap.jipin.kaixin001.com	
    ErrorLog logs/wap_error_log
    CustomLog "| /usr/local/apache2/bin/rotatelogs /usr/local/apache2/logs/wap_access_log.%Y%m%d 86400 480" combined env=!dontlog
</VirtualHost>

<VirtualHost *>
    DocumentRoot /kxc/shop/htdocs
    ServerName shop.kxjie.com
    ErrorLog logs/shop_error_log
    CustomLog "| /usr/local/apache2/bin/rotatelogs /usr/local/apache2/logs/shop_access_log.%Y%m%d 86400 480" combined env=!dontlog
</VirtualHost>

<VirtualHost *>
    DocumentRoot /kxc/admin/htdocs
    ServerName sa.kxjie.com
    ServerAlias sa.np.jipin.kaixin009.com
    ServerAlias sa.np.kaixin009.com

    RewriteEngine on
    RewriteRule ^/crawlimg/(.+) /crawlimg/404.php [L,NE]
    ErrorLog logs/admin_error_log
    CustomLog "| /usr/local/apache2/bin/rotatelogs /usr/local/apache2/logs/admin_access_log.%Y%m%d 86400 480" combined env=!dontlog
</VirtualHost>


<VirtualHost *>
    DocumentRoot /kxc/static/htdocs
    ServerName i.kxjie.com
    ServerAlias static.kxjie.com
    ErrorLog logs/static_error_log

    RewriteEngine on
    RewriteRule ^.+(\.js|\.css|\.less)$ /index.php
    #RewriteRule ^/js/([^-]+)-([0-9a-z]+).js /js/$1.js [L,NE]
    #RewriteRule ^/css/(.+)-([0-9a-z]+).css /css/$1.css [L,NE]

    CustomLog "| /usr/local/apache2/bin/rotatelogs /usr/local/apache2/logs/static_access_log.%Y%m%d 86400 480" combined env=!dontlog
</VirtualHost>

<VirtualHost *>
    DocumentRoot /kxc/storage/htdocs
    ServerName pic.kxjie.com
    ServerAlias p.kxc.kaixin009.com

    RewriteEngine on
    RewriteRule ^/(.+) /common/404.php [L,NE]
    ErrorLog logs/storage_error_log
    CustomLog "| /usr/local/apache2/bin/rotatelogs /usr/local/apache2/logs/storage_access_log.%Y%m%d 86400 480" combined env=!dontlog
</VirtualHost>

<VirtualHost *>
    DocumentRoot /kxc/api/htdocs_apitest
    ServerName apitest.kxc.kaixin009.com

    RewriteEngine on
    CustomLog "| /usr/local/apache2/bin/rotatelogs /usr/local/apache2/logs/apitest_access_log.%Y%m%d 86400 480" combined env=!dontlog
</VirtualHost>

<VirtualHost *>
    DocumentRoot /kxc/api/htdocs
    ServerName api.kxc.kaixin009.com

    RewriteEngine on
    RewriteCond /kxc/api/htdocs/%{REQUEST_FILENAME} !-f
    RewriteCond /kxc/api/htdocs/%{REQUEST_FILENAME} !-d
    RewriteRule ^(.*)$ /index.php
    CustomLog "| /usr/local/apache2/bin/rotatelogs /usr/local/apache2/logs/api_access_log.%Y%m%d 86400 480" combined env=!dontlog
</VirtualHost>
